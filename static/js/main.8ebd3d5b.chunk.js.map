{"version":3,"sources":["components/Timer.jsx","components/Modal.jsx","components/Root.jsx","App.js","reportWebVitals.js","index.js"],"names":["Timer","useState","minutes","seconds","setTime","isFocus","setIsFocus","begin","setBegin","pause","setPause","resume","setResume","pauseTime","parseInt","useEffect","timerId","setInterval","clearInterval","className","toString","padStart","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Example","open","setOpen","cancelButtonRef","useRef","Root","show","as","Fragment","initialFocus","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","Title","type","ref","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ebd3d5b.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst Timer = () => {\r\n  const [[minutes, seconds], setTime] = useState([24, 0]);\r\n  const [isFocus, setIsFocus] = useState(true);\r\n  const [begin, setBegin] = useState(false);\r\n  const [pause, setPause] = useState(false);\r\n  const [resume, setResume] = useState(false);\r\n\r\n  const focusTime = () => {\r\n    if (minutes === 0 && seconds === 0) {\r\n      setTime([parseInt(5), parseInt(0)]);\r\n      setIsFocus(false);\r\n      setBegin(false);\r\n    } else if (seconds === 0) {\r\n      setTime([minutes - 1, 59]);\r\n    } else {\r\n      setTime([minutes, seconds - 1]);\r\n    }\r\n  };\r\n\r\n  const breakTime = () => {\r\n    if (minutes === 0 && seconds === 0) {\r\n      setTime([parseInt(24), parseInt(0)]);\r\n      setIsFocus(true);\r\n      setBegin(false);\r\n    } else if (seconds === 0) {\r\n      setTime([minutes - 1, 59]);\r\n    } else {\r\n      setTime([minutes, seconds - 1]);\r\n    }\r\n  };\r\n\r\n  const pauseTime = () => {\r\n    setTime([parseInt(minutes), parseInt(seconds)]);\r\n    setPause(true)\r\n    setResume(true)\r\n  };\r\n\r\n  const resetTime = () =>{\r\n    setTime([parseInt(24), parseInt(0)]);\r\n    setPause(false)\r\n    setResume(false)\r\n    setBegin(false)\r\n  }\r\n\r\n  const resumeTime = () =>{\r\n    setPause(false)\r\n    setResume(false)\r\n    setBegin(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (pause) {\r\n      const timerId = setInterval(() => pauseTime(), 1000);\r\n      return () => clearInterval(timerId);\r\n    } else {\r\n      if (begin) {\r\n        if (isFocus) {\r\n          const timerId = setInterval(() => focusTime(), 1000);\r\n          return () => clearInterval(timerId);\r\n        } else {\r\n          const timerId = setInterval(() => breakTime(), 1000);\r\n          return () => clearInterval(timerId);\r\n        }\r\n      } else {\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-center h-full w-full\">\r\n      <p className=\"text-8xl font-semibold\">\r\n        {minutes.toString().padStart(2, \"0\")} :{\" \"}\r\n        {seconds.toString().padStart(2, \"0\")}\r\n      </p>\r\n      {!begin ? (\r\n        <button\r\n          className=\"bg-green-500 py-4 px-6 mt-10 text-white text-xl rounded-xl flex flex-row\"\r\n          onClick={() => setBegin(true)}\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n          Inicar\r\n        </button>\r\n      ) : !resume ? (\r\n        <button\r\n          className=\"bg-yellow-400 py-4 px-6 mt-10 text-black text-xl rounded-xl flex flex-row\"\r\n          onClick={() => pauseTime()}\r\n        >\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 mr-2\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n          </svg>\r\n          Pausar\r\n        </button>\r\n      ) : (\r\n        <div className=\"flex flex-row \">\r\n          <button\r\n            className=\"bg-green-300 py-5 px-4 mt-10 mr-4 text-black text-xl rounded-xl flex flex-row\"\r\n            onClick={() => resumeTime()}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z\" />\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n            </svg>\r\n            Continuar\r\n          </button>\r\n          <button\r\n            className=\"bg-red-500 py-5 px-4 mt-10 text-black text-xl rounded-xl flex flex-row\"\r\n            onClick={() => resetTime()}\r\n          >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M7 11.5V14m0-2.5v-6a1.5 1.5 0 113 0m-3 6a1.5 1.5 0 00-3 0v2a7.5 7.5 0 0015 0v-5a1.5 1.5 0 00-3 0m-6-3V11m0-5.5v-1a1.5 1.5 0 013 0v1m0 0V11m0-5.5a1.5 1.5 0 013 0v3m0 0V11\" />\r\n            </svg>\r\n            Reiniciar\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","/* This example requires Tailwind CSS v2.0+ */\r\nimport { Fragment, useRef, useState } from \"react\";\r\nimport { Dialog, Transition } from \"@headlessui/react\";\r\nimport { ExclamationIcon } from \"@heroicons/react/outline\";\r\n\r\nexport default function Example() {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const cancelButtonRef = useRef(null);\r\n\r\n  return (\r\n    <Transition.Root show={open} as={Fragment}>\r\n      <Dialog\r\n        as=\"div\"\r\n        className=\"fixed z-10 inset-0 overflow-y-auto\"\r\n        initialFocus={cancelButtonRef}\r\n        onClose={setOpen}\r\n      >\r\n        <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0\"\r\n            enterTo=\"opacity-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100\"\r\n            leaveTo=\"opacity-0\"\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity\" />\r\n          </Transition.Child>\r\n\r\n          {/* This element is to trick the browser into centering the modal contents. */}\r\n          <span\r\n            className=\"hidden sm:inline-block sm:align-middle sm:h-screen\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            &#8203;\r\n          </span>\r\n          <Transition.Child\r\n            as={Fragment}\r\n            enter=\"ease-out duration-300\"\r\n            enterFrom=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n            enterTo=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leave=\"ease-in duration-200\"\r\n            leaveFrom=\"opacity-100 translate-y-0 sm:scale-100\"\r\n            leaveTo=\"opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95\"\r\n          >\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                <div className=\"sm:flex sm:items-start\">\r\n                  <div className=\"mx-auto flex-shrink-0 flex items-center justify-center h-12 w-12 rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10\">\r\n                    <ExclamationIcon\r\n                      className=\"h-6 w-6 text-yellow-400\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                    <Dialog.Title\r\n                      as=\"h3\"\r\n                      className=\"text-lg leading-6 font-medium text-gray-900\"\r\n                    >\r\n                      La técnica pomodoro\r\n                    </Dialog.Title>\r\n                    <div className=\"mt-2\">\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        La Técnica Pomodoro es un método para mejorar la\r\n                        administración del tiempo dedicado a una actividad. Fue\r\n                        creado por Francesco Cirillo a fines de la década de\r\n                        1980.1​ Se basa en usar un temporizador para dividir el\r\n                        tiempo en intervalos fijos, llamados pomodoros, de 25\r\n                        minutos de actividad, seguidos de 5 minutos de descanso\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-500 italic mt-2\">-Wikipedia</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                  onClick={() => setOpen(false)}\r\n                  ref={cancelButtonRef}\r\n                >\r\n                  Cerrar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </Transition.Child>\r\n        </div>\r\n      </Dialog>\r\n    </Transition.Root>\r\n  );\r\n}\r\n","import {useState} from 'react'\r\nimport Timer from './Timer.jsx'\r\nimport Modal from './Modal.jsx'\r\n\r\nexport default function Root(){\r\n    const [open, setOpen] = useState(false)\r\n    return(\r\n        <div className=\"mt-8 sm:w-full md:w-full lg:full flex flex-col items-center\">\r\n            <p className=\"font-bold text-3xl md:text-5xl \">Tecnica pomodoro</p>\r\n            <Timer />\r\n            <button className=\"mb-8\" onClick={()=>setOpen(true)}>Mas informacion de Pomodoro</button>\r\n            {\r\n                open ? <Modal /> : null\r\n            }\r\n            <div className=\"bg-red-500 w-full h-11 flex flex-row justify-center items-center\">\r\n                <p className=\"text-white font-light text-sm\">Coded by Rigoberto Alcantar</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport Root from './components/Root.jsx'\n\nfunction App() {\n  return (\n    <div className=\"h-screen flex justify-center bg-gray-100\">\n      <Root/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}